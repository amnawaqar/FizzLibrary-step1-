@page "/"
@using FizzLibrary.Shared
@inject HttpClient Http
@using System.ComponentModel.DataAnnotations


<h3>FizzBuzz Generator</h3>

<EditForm Model="inputModel" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label for="numberInput" class="form-label">Enter a positive integer</label>
        <InputNumber id="numberInput" @bind-Value="inputModel.Number" class="form-control" />
        <span class="text-danger">@validationMessage</span>
    </div>

    <button type="submit" class="btn btn-primary">Generate</button>
</EditForm>

@if (fizzBuzzResult != null)
{
    <div class="mt-3">
        <h4>Result:</h4>
        <ul>
            @foreach (var item in fizzBuzzResult)
            {
                @if (item == "fizzbuzz")
                {
                    <li>
                        <span style="color: blue;">fizz</span>
                        <span style="color: green;">buzz</span>
                    </li>
                }
                else
                {
                    <li style="@(item == "fizz" ? "color: blue;" : (item == "buzz" ? "color: green;" : ""))">@item</li>
                }
            }
        </ul>
    </div>
}

@code {
    private InputModel inputModel = new InputModel();
    private string validationMessage = string.Empty;
    private List<string> fizzBuzzResult = new();

    private async Task HandleValidSubmit()
    {
        var response = await Http.GetAsync($"api/fizzbuzz/{inputModel.Number}");

        if (response.IsSuccessStatusCode)
        {
            fizzBuzzResult = await response.Content.ReadFromJsonAsync<List<string>>();
            validationMessage = string.Empty;
        }
        else
        {
            validationMessage = await response.Content.ReadAsStringAsync();
            fizzBuzzResult = null;
        }
    }

    public class InputModel
    {
        [Required(ErrorMessage = "The field is required.")]
        [Range(1, 1000, ErrorMessage = "Please enter a number between 1 and 1000")]
        public int Number { get; set; }
    }
}
